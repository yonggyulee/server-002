syntax = "proto3";

package mirero.daq.domain.dataset.protos.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "daq_common.proto";

option csharp_namespace = "Mirero.DAQ.Domain.Dataset.Protos.V1";

service ImageDatasetService {  
  // ImageDataset
  rpc ListImageDatasets(ListImageDatasetsRequest) returns (ListImageDatasetsResponse) {}
  rpc GetImageDataset(GetImageDatasetRequest) returns (ImageDataset) {}
  rpc CreateImageDataset(CreateImageDatasetRequest) returns (ImageDataset) {}
  rpc UpdateImageDataset(UpdateImageDatasetRequest) returns (ImageDataset) {}
  rpc DeleteImageDataset(DeleteImageDatasetRequest) returns (ImageDataset) {}
  
  // Sample
  rpc ListSamples(ListSamplesRequest) returns (ListSamplesResponse) {}
  rpc GetSample(GetSampleRequest) returns (Sample) {}
  rpc CreateSample(CreateSampleRequest) returns (Sample) {}
  rpc UpdateSample(UpdateSampleRequest) returns (Sample) {}
  rpc DeleteSample(DeleteSampleRequest) returns (Sample) {}
  rpc AddImage(Image) returns (Image) {}
  rpc DeleteImage(DeleteImageRequest) returns (Image) {}
}

// ImageDataset
message ImageDataset {
  int64 id = 1; // Output Only
  string title = 2;
  string directory_name = 3;
  google.protobuf.BytesValue thumbnail_buffer = 4; // Output Only
  google.protobuf.Timestamp create_date = 5; // Output Only
  google.protobuf.Timestamp update_date = 6; // Output Only
  google.protobuf.StringValue create_user = 7; // Output Only
  google.protobuf.StringValue update_user = 8; // Output Only
  google.protobuf.StringValue properties = 9;
  google.protobuf.StringValue description = 10;
  string volume_id = 11;
  google.protobuf.StringValue volume_title = 12; // Output Only
}

message ListImageDatasetsRequest {
  mirero.daq.domain.common.protos.QueryParameter query_parameter = 1;
  bool with_thumbnail = 2;
  double lock_timeout_sec = 8;
}

message ListImageDatasetsResponse {
  mirero.daq.domain.common.protos.PageResult page_result = 1;
  repeated ImageDataset datasets = 2;
}

message GetImageDatasetRequest {
  int64 dataset_id = 1;
}

message CreateImageDatasetRequest{
	string title = 2;
	string directory_name = 3;
	google.protobuf.StringValue properties = 9;
	google.protobuf.StringValue description = 10;
	string volume_id = 11;
}

message UpdateImageDatasetRequest{
	int64 id = 1;
	string title = 2;
	string directory_name = 3;
	google.protobuf.StringValue properties = 9;
	google.protobuf.StringValue description = 10;
	string volume_id = 11;
	double lock_timeout_sec = 12;
}

message DeleteImageDatasetRequest {
  int64 dataset_id = 1;
  double lock_timeout_sec = 8;
}

// Sample
message Sample {
  int32 id = 1;
  repeated Image images = 2;
  google.protobuf.StringValue properties = 3;
  google.protobuf.StringValue description = 4;
  int64 dataset_id = 5;
}

message ListSamplesRequest {
  mirero.daq.domain.common.protos.QueryParameter query_parameter = 1;
  bool with_buffer = 2;
  double lock_timeout_sec = 8;
}

message ListSamplesResponse {
  mirero.daq.domain.common.protos.PageResult page_result = 1;
  repeated Sample samples = 2;
}

message GetSampleRequest {
  int32 sample_id = 1;
  int64 dataset_id = 2;
  double lock_timeout_sec = 8;
}

message CreateSampleRequest {
	Sample sample = 1;
	double lock_timeout_sec = 8;
}

message UpdateSampleRequest {
	Sample sample = 1;
	double lock_timeout_sec = 8;
}

message DeleteSampleRequest {
  int32 sample_id = 1;
  int64 dataset_id = 2;
  double lock_timeout_sec = 8;
}

// Image
message Image {
  int64 id = 1; // Output Only
  string filename = 2;
  string extension = 3;
  string image_code = 4;
  google.protobuf.BytesValue thumbnail_buffer = 6;
  google.protobuf.BytesValue buffer = 7;
  google.protobuf.StringValue properties = 8;
  google.protobuf.StringValue description = 9;
  int64 dataset_id = 10;
  int32 sample_id = 11;
}

message ListImagesRequest {
  mirero.daq.domain.common.protos.QueryParameter query_parameter = 1;
}

message ListImagesResponse {
  mirero.daq.domain.common.protos.PageResult page_result = 1;
  repeated Image images = 2;
}

message GetImageRequest {
  int64 image_id = 1;
}

message DeleteImageRequest {
  int64 image_id = 1;
  double lock_timeout_sec = 8;
}