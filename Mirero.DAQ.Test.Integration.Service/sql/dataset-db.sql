DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'dataset') THEN
        CREATE SCHEMA dataset;
    END IF;
END $EF$;

CREATE TABLE dataset.volume (
    id varchar(256) NOT NULL,
    title text NOT NULL,
    type varchar(256) NOT NULL,
    uri varchar(512) NOT NULL,
    usage bigint NOT NULL DEFAULT (0),
    capacity bigint NOT NULL DEFAULT (0),
    properties jsonb NULL,
    description text NULL,
    CONSTRAINT pk_volume PRIMARY KEY (id)
);


CREATE TABLE dataset.class_code_set (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    title varchar(512) NOT NULL,
    task varchar(512) NOT NULL,
    directory_name varchar(512) NOT NULL,
    create_date timestamp with time zone NOT NULL DEFAULT (now()),
    update_date timestamp with time zone NOT NULL DEFAULT (now()),
    create_user varchar(256) NOT NULL,
    update_user varchar(256) NOT NULL,
    properties jsonb NULL,
    description text NULL,
    volume_id varchar(256) NOT NULL,
    CONSTRAINT pk_class_code_set PRIMARY KEY (id),
    CONSTRAINT fk_class_code_set_volumes_volume_id FOREIGN KEY (volume_id) REFERENCES dataset.volume (id) ON DELETE CASCADE
);


CREATE TABLE dataset.image_dataset (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    title varchar(512) NOT NULL,
    directory_name varchar(512) NOT NULL,
    create_date timestamp with time zone NOT NULL DEFAULT (now()),
    update_date timestamp with time zone NOT NULL DEFAULT (now()),
    create_user varchar(256) NOT NULL,
    update_user varchar(256) NOT NULL,
    properties jsonb NULL,
    description text NULL,
    volume_id varchar(256) NOT NULL,
    CONSTRAINT pk_image_dataset PRIMARY KEY (id),
    CONSTRAINT fk_image_dataset_volumes_volume_id FOREIGN KEY (volume_id) REFERENCES dataset.volume (id) ON DELETE CASCADE
);


CREATE TABLE dataset.class_code (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    code integer NOT NULL,
    name varchar(512) NOT NULL,
    create_date timestamp with time zone NOT NULL DEFAULT (now()),
    update_date timestamp with time zone NOT NULL DEFAULT (now()),
    create_user varchar(256) NOT NULL,
    update_user varchar(256) NOT NULL,
    properties jsonb NULL,
    description text NULL,
    class_code_set_id bigint NOT NULL,
    CONSTRAINT pk_class_code PRIMARY KEY (id),
    CONSTRAINT fk_class_code_class_code_set_class_code_set_id FOREIGN KEY (class_code_set_id) REFERENCES dataset.class_code_set (id) ON DELETE CASCADE
);


CREATE TABLE dataset.gt_dataset (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    title varchar(512) NOT NULL,
    directory_name varchar(512) NOT NULL,
    create_date timestamp with time zone NOT NULL DEFAULT (now()),
    update_date timestamp with time zone NOT NULL DEFAULT (now()),
    create_user varchar(256) NOT NULL,
    update_user varchar(256) NOT NULL,
    properties jsonb NULL,
    description text NULL,
    volume_id varchar(256) NOT NULL,
    image_dataset_id bigint NOT NULL,
    class_code_set_id bigint NOT NULL,
    CONSTRAINT "PK_gt_dataset" PRIMARY KEY (id),
    CONSTRAINT fk_gt_dataset_class_code_set_class_code_set_id FOREIGN KEY (class_code_set_id) REFERENCES dataset.class_code_set (id) ON DELETE CASCADE,
    CONSTRAINT fk_gt_dataset_image_dataset_image_dataset_id FOREIGN KEY (image_dataset_id) REFERENCES dataset.image_dataset (id) ON DELETE CASCADE,
    CONSTRAINT fk_gt_dataset_volume_volume_id FOREIGN KEY (volume_id) REFERENCES dataset.volume (id) ON DELETE CASCADE
);


CREATE TABLE dataset.sample (
    id integer NOT NULL,
    dataset_id bigint NOT NULL,
    properties jsonb NULL,
    description text NULL,
    CONSTRAINT pk_sample PRIMARY KEY (id, dataset_id),
    CONSTRAINT fk_sample_image_dataset_dataset_id FOREIGN KEY (dataset_id) REFERENCES dataset.image_dataset (id) ON DELETE CASCADE
);


CREATE TABLE dataset.class_code_reference_image (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    filename varchar(512) NOT NULL,
    extension varchar(256) NOT NULL,
    description text NULL,
    class_code_set_id bigint NOT NULL,
    class_code_id bigint NOT NULL,
    CONSTRAINT pk_class_code_reference_image PRIMARY KEY (id),
    CONSTRAINT fk_class_code_reference_image_class_code_class_code_id FOREIGN KEY (class_code_id) REFERENCES dataset.class_code (id) ON DELETE CASCADE,
    CONSTRAINT fk_class_code_reference_image_class_code_set_class_code_set_id FOREIGN KEY (class_code_set_id) REFERENCES dataset.class_code_set (id) ON DELETE CASCADE
);


CREATE TABLE dataset.classification_gt_dataset (
    id bigint NOT NULL,
    CONSTRAINT "PK_classification_gt_dataset" PRIMARY KEY (id),
    CONSTRAINT fk_classification_gt_dataset_gt_dataset_id FOREIGN KEY (id) REFERENCES dataset.gt_dataset (id) ON DELETE CASCADE
);


CREATE TABLE dataset.object_detection_gt_dataset (
    id bigint NOT NULL,
    CONSTRAINT "PK_object_detection_gt_dataset" PRIMARY KEY (id),
    CONSTRAINT fk_object_detection_gt_dataset_gt_dataset_id FOREIGN KEY (id) REFERENCES dataset.gt_dataset (id) ON DELETE CASCADE
);


CREATE TABLE dataset.segmentation_gt_dataset (
    id bigint NOT NULL,
    CONSTRAINT "PK_segmentation_gt_dataset" PRIMARY KEY (id),
    CONSTRAINT fk_segmentation_gt_dataset_gt_dataset_id FOREIGN KEY (id) REFERENCES dataset.gt_dataset (id) ON DELETE CASCADE
);


CREATE TABLE dataset.image (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    filename varchar(512) NOT NULL,
    extension varchar(256) NOT NULL,
    image_code varchar(512) NULL,
    properties jsonb NULL,
    description text NULL,
    dataset_id bigint NOT NULL,
    sample_id integer NOT NULL,
    CONSTRAINT pk_image PRIMARY KEY (id),
    CONSTRAINT fk_image_samples_sample_id_dataset_id FOREIGN KEY (sample_id, dataset_id) REFERENCES dataset.sample (id, dataset_id) ON DELETE CASCADE
);


CREATE TABLE dataset.classification_gt (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    properties jsonb NULL,
    description text NULL,
    dataset_id bigint NOT NULL,
    image_id bigint NOT NULL,
    class_code_id bigint NOT NULL,
    CONSTRAINT pk_classification_gt PRIMARY KEY (id),
    CONSTRAINT fk_classification_gt_class_codes_class_code_id FOREIGN KEY (class_code_id) REFERENCES dataset.class_code (id) ON DELETE CASCADE,
    CONSTRAINT fk_classification_gt_gt_datasets_dataset_id FOREIGN KEY (dataset_id) REFERENCES dataset.gt_dataset (id) ON DELETE CASCADE,
    CONSTRAINT fk_classification_gt_image_image_id FOREIGN KEY (image_id) REFERENCES dataset.image (id) ON DELETE CASCADE
);


CREATE TABLE dataset.object_detection_gt (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    filename varchar(512) NOT NULL,
    extension varchar(256) NOT NULL,
    properties jsonb NULL,
    description text NULL,
    dataset_id bigint NOT NULL,
    image_id bigint NOT NULL,
    CONSTRAINT pk_object_detection_gt PRIMARY KEY (id),
    CONSTRAINT fk_object_detection_gt_gt_datasets_dataset_id FOREIGN KEY (dataset_id) REFERENCES dataset.gt_dataset (id) ON DELETE CASCADE,
    CONSTRAINT fk_object_detection_gt_image_image_id FOREIGN KEY (image_id) REFERENCES dataset.image (id) ON DELETE CASCADE
);


CREATE TABLE dataset.segmentation_gt (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    filename varchar(512) NOT NULL,
    extension varchar(256) NOT NULL,
    properties jsonb NULL,
    description text NULL,
    dataset_id bigint NOT NULL,
    image_id bigint NOT NULL,
    CONSTRAINT pk_segmentation_gt PRIMARY KEY (id),
    CONSTRAINT fk_segmentation_gt_gt_datasets_dataset_id FOREIGN KEY (dataset_id) REFERENCES dataset.gt_dataset (id) ON DELETE CASCADE,
    CONSTRAINT fk_segmentation_gt_image_image_id FOREIGN KEY (image_id) REFERENCES dataset.image (id) ON DELETE CASCADE
);


INSERT INTO dataset.volume (id, capacity, description, properties, title, type, uri)
VALUES ('volume1', 100000000, NULL, NULL, 'Volume1', 'image', 'c:/mirero/volumes\volume1');


INSERT INTO dataset.class_code_set (id, create_date, create_user, description, directory_name, properties, task, title, update_date, update_user, volume_id)
VALUES (1, TIMESTAMPTZ '2022-05-16 06:06:59.703334Z', 'test_user1', NULL, 'class_code_set1', NULL, 'Classification', 'ClassCodeSet1', TIMESTAMPTZ '2022-05-16 06:06:59.703334Z', 'test_user1', 'volume1');


INSERT INTO dataset.image_dataset (id, create_date, create_user, description, directory_name, properties, title, update_date, update_user, volume_id)
VALUES (1, TIMESTAMPTZ '2022-05-16 08:18:51.703312Z', 'test_user1', NULL, 'dataset1', NULL, 'Dataset1', TIMESTAMPTZ '2022-05-16 08:18:51.703312Z', 'test_user1', 'volume1');


INSERT INTO dataset.class_code (id, class_code_set_id, code, create_date, create_user, description, name, properties, update_date, update_user)
VALUES (1, 1, 1, TIMESTAMPTZ '2022-05-16 08:43:19.703336Z', 'test_user1', NULL, 'code1', NULL, TIMESTAMPTZ '2022-05-16 08:43:19.703336Z', 'test_user1');
INSERT INTO dataset.class_code (id, class_code_set_id, code, create_date, create_user, description, name, properties, update_date, update_user)
VALUES (2, 1, 2, TIMESTAMPTZ '2022-05-16 08:43:13.703336Z', 'test_user1', NULL, 'code2', NULL, TIMESTAMPTZ '2022-05-16 08:43:13.703336Z', 'test_user1');
INSERT INTO dataset.class_code (id, class_code_set_id, code, create_date, create_user, description, name, properties, update_date, update_user)
VALUES (3, 1, 3, TIMESTAMPTZ '2022-05-16 08:43:26.703336Z', 'test_user1', NULL, 'code3', NULL, TIMESTAMPTZ '2022-05-16 08:43:26.703336Z', 'test_user1');


INSERT INTO dataset.sample (dataset_id, id, description, properties)
VALUES (1, 1, NULL, NULL);
INSERT INTO dataset.sample (dataset_id, id, description, properties)
VALUES (1, 2, NULL, NULL);
INSERT INTO dataset.sample (dataset_id, id, description, properties)
VALUES (1, 3, NULL, NULL);


INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (1, 1, 1, NULL, 'jpg', 'image1.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (2, 1, 1, NULL, 'jpg', 'image2.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (3, 1, 1, NULL, 'jpg', 'image3.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (4, 2, 1, NULL, 'jpg', 'image4.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (5, 2, 1, NULL, 'jpg', 'image5.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (6, 2, 1, NULL, 'jpg', 'image6.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (7, 3, 1, NULL, 'jpg', 'image7.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (8, 3, 1, NULL, 'jpg', 'image8.jpg');
INSERT INTO dataset.class_code_reference_image (id, class_code_id, class_code_set_id, description, extension, filename)
VALUES (9, 3, 1, NULL, 'jpg', 'image9.jpg');


INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (1, 1, NULL, 'jpg', 'image1.jpg', 'right', NULL, 1);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (2, 1, NULL, 'jpg', 'image2.jpg', 'right', NULL, 1);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (3, 1, NULL, 'jpg', 'image3.jpg', 'right', NULL, 1);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (4, 1, NULL, 'jpg', 'image4.jpg', 'right', NULL, 2);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (5, 1, NULL, 'jpg', 'image5.jpg', 'right', NULL, 2);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (6, 1, NULL, 'jpg', 'image6.jpg', 'right', NULL, 2);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (7, 1, NULL, 'jpg', 'image7.jpg', 'right', NULL, 3);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (8, 1, NULL, 'jpg', 'image8.jpg', 'right', NULL, 3);
INSERT INTO dataset.image (id, dataset_id, description, extension, filename, image_code, properties, sample_id)
VALUES (9, 1, NULL, 'jpg', 'image9.jpg', 'right', NULL, 3);


CREATE INDEX ix_class_code_class_code_set_id ON dataset.class_code (class_code_set_id);


CREATE INDEX ix_class_code_reference_image_class_code_id ON dataset.class_code_reference_image (class_code_id);


CREATE INDEX ix_class_code_reference_image_class_code_set_id ON dataset.class_code_reference_image (class_code_set_id);


CREATE UNIQUE INDEX ix_class_code_reference_image_filename ON dataset.class_code_reference_image (filename);


CREATE UNIQUE INDEX ix_class_code_set_directory_name_volume_id ON dataset.class_code_set (directory_name, volume_id);


CREATE UNIQUE INDEX ix_class_code_set_title ON dataset.class_code_set (title);


CREATE INDEX ix_class_code_set_volume_id ON dataset.class_code_set (volume_id);


CREATE INDEX ix_classification_gt_class_code_id ON dataset.classification_gt (class_code_id);


CREATE INDEX ix_classification_gt_dataset_id ON dataset.classification_gt (dataset_id);


CREATE INDEX ix_classification_gt_image_id ON dataset.classification_gt (image_id);


CREATE INDEX ix_gt_dataset_class_code_set_id ON dataset.gt_dataset (class_code_set_id);


CREATE UNIQUE INDEX ix_gt_dataset_directory_name_volume_id ON dataset.gt_dataset (directory_name, volume_id);


CREATE INDEX ix_gt_dataset_image_dataset_id ON dataset.gt_dataset (image_dataset_id);


CREATE UNIQUE INDEX ix_gt_dataset_title ON dataset.gt_dataset (title);


CREATE INDEX ix_gt_dataset_volume_id ON dataset.gt_dataset (volume_id);


CREATE UNIQUE INDEX ix_image_dataset_id_filename ON dataset.image (dataset_id, filename);


CREATE INDEX ix_image_sample_id_dataset_id ON dataset.image (sample_id, dataset_id);


CREATE UNIQUE INDEX ix_image_dataset_directory_name_volume_id ON dataset.image_dataset (directory_name, volume_id);


CREATE UNIQUE INDEX ix_image_dataset_title ON dataset.image_dataset (title);


CREATE INDEX ix_image_dataset_volume_id ON dataset.image_dataset (volume_id);


CREATE INDEX ix_object_detection_gt_dataset_id ON dataset.object_detection_gt (dataset_id);


CREATE INDEX ix_object_detection_gt_image_id ON dataset.object_detection_gt (image_id);


CREATE INDEX ix_sample_dataset_id ON dataset.sample (dataset_id);


CREATE INDEX ix_segmentation_gt_dataset_id ON dataset.segmentation_gt (dataset_id);


CREATE INDEX ix_segmentation_gt_image_id ON dataset.segmentation_gt (image_id);


CREATE UNIQUE INDEX ix_volume_title ON dataset.volume (title);


CREATE UNIQUE INDEX ix_volume_uri ON dataset.volume (uri);


SELECT setval(
    pg_get_serial_sequence('dataset.class_code_set', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM dataset.class_code_set) + 1,
        nextval(pg_get_serial_sequence('dataset.class_code_set', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('dataset.image_dataset', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM dataset.image_dataset) + 1,
        nextval(pg_get_serial_sequence('dataset.image_dataset', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('dataset.class_code', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM dataset.class_code) + 1,
        nextval(pg_get_serial_sequence('dataset.class_code', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('dataset.class_code_reference_image', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM dataset.class_code_reference_image) + 1,
        nextval(pg_get_serial_sequence('dataset.class_code_reference_image', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('dataset.image', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM dataset.image) + 1,
        nextval(pg_get_serial_sequence('dataset.image', 'id'))),
    false);


