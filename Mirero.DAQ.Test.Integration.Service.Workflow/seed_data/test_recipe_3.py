
##!--{"Name":"__mainfunction__","Type":null,"Key":"","Value":"resultdata = RecipeRun(gs_semimage1,gs_semimage2,gs_semimage3,gs_semimage4,gs_semimage5,gs_semimage6,gs_semimage7,gs_semimage8,gs_semimage9,gs_semimage10,gs_layercount,gs_layerimage1,gs_layerindex1,gs_refimage1,gs_refvector1,gs_layerimage2,gs_layerindex2,gs_refimage2,gs_refvector2,gs_layerimage3,gs_layerindex3,gs_refimage3,gs_refvector3,gs_layerimage4,gs_layerindex4,gs_refimage4,gs_refvector4,gs_layerimage5,gs_layerindex5,gs_refimage5,gs_refvector5,gs_layerimage6,gs_layerindex6,gs_refimage6,gs_refvector6,gs_layerimage7,gs_layerindex7,gs_refimage7,gs_refvector7,gs_layerimage8,gs_layerindex8,gs_refimage8,gs_refvector8,gs_layerimage9,gs_layerindex9,gs_refimage9,gs_refvector9,gs_layerimage10,gs_layerindex10,gs_refimage10,gs_refvector10,gs_layerimage11,gs_layerindex11,gs_refimage11,gs_refvector11,gs_layerimage12,gs_layerindex12,gs_refimage12,gs_refvector12,gs_layerimage13,gs_layerindex13,gs_refimage13,gs_refvector13,gs_layerimage14,gs_layerindex14,gs_refimage14,gs_refvector14,gs_layerimage15,gs_layerindex15,gs_refimage15,gs_refvector15,gs_layerimage16,gs_layerindex16,gs_refimage16,gs_refvector16,gs_layerimage17,gs_layerindex17,gs_refimage17,gs_refvector17,gs_layerimage18,gs_layerindex18,gs_refimage18,gs_refvector18,gs_layerimage19,gs_layerindex19,gs_refimage19,gs_refvector19,gs_layerimage20,gs_layerindex20,gs_refimage20,gs_refvector20,gs_resultimageurl,gs_resultdataurl,gs_resultimageextension,gs_waferid,gs_defectid,gs_xreal,gs_yreal,gs_scale,gs_xindex,gs_yindex,gs_particlecode,gs_angle,gs_clipimagewidth,gs_clipimageheight,gs_imagefov)","Category":"Others"}
##!--{"Name":"__templatename__","Type":"string","Key":"","Value":"daq_3_0","Category":"Others"}
##!--{"Name":"gs_semimage1","Type":"file","Key":"","Value":"C:\\Users\\hj.lee\\Desktop\\레시피\\sem_sample.JPG","Category":"gs_semimage"}
##!--{"Name":"gs_semimage2","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage3","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage4","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage5","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage6","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage7","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage8","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage9","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_semimage10","Type":"file","Key":"","Value":"","Category":"gs_semimage"}
##!--{"Name":"gs_layerimage1","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage2","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage3","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage4","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage5","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage6","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage7","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage8","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage9","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage10","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage11","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage12","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage13","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage14","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage15","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage16","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage17","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage18","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage19","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerimage20","Type":"file","Key":"","Value":"","Category":"gs_layerimage"}
##!--{"Name":"gs_layerindex1","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex2","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex3","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex4","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex5","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex6","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex7","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex8","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex9","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex10","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex11","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex12","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex13","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex14","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex15","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex16","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex17","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex18","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex19","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_layerindex20","Type":"string","Key":"","Value":"","Category":"gs_layerindex"}
##!--{"Name":"gs_refimage1","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage2","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage3","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage4","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage5","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage6","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage7","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage8","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage9","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage10","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage11","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage12","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage13","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage14","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage15","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage16","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage17","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage18","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage19","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refimage20","Type":"file","Key":"","Value":"","Category":"gs_refimage"}
##!--{"Name":"gs_refvector1","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector2","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector3","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector4","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector5","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector6","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector7","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector8","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector9","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector10","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector11","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector12","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector13","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector14","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector15","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector16","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector17","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector18","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector19","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_refvector20","Type":"file","Key":"","Value":"","Category":"gs_refvector"}
##!--{"Name":"gs_layercount","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_resultimageurl","Type":"directory","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_resultdataurl","Type":"directory","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_resultimageextension","Type":"string","Key":"","Value":".jpg","Category":"Others"}
##!--{"Name":"gs_waferid","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_defectid","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_xreal","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_yreal","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_scale","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_xindex","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_yindex","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_particlecode","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_angle","Type":"string","Key":"","Value":"0","Category":"Others"}
##!--{"Name":"gs_imagefov","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_clipimagewidth","Type":"string","Key":"","Value":"","Category":"Others"}
##!--{"Name":"gs_clipimageheight","Type":"string","Key":"","Value":"","Category":"Others"}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_image","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5573827134","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"Load","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"RGBToGray","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_image_1","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"9272901770","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"RGBToGray","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"Clip","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_image_2","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5582910290","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"Clip","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"GaussianFiltering","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5767484844","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"GaussianFiltering","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"IntensityThresholding","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"1231900292","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"GaussianFiltering","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"OtsuThresholdValue","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"threshold","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5767484845","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"OtsuThresholdValue","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"IntensityThresholding","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"binarization_image","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"2753316755","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"IntensityThresholding","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"RegionExtraction","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"regions","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"8982012135","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"RegionExtraction","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"RegionSorting","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"4318166375","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"GaussianFiltering","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"getCenterPoint_1","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##[--{"OutputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_1","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"InputProperty":{"Name":"","Alias":"","Type":"","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"4318166376","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},"OutputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"RegionSorting","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null},"InputModule":{"Name":null,"Description":null,"Inputs":[],"Outputs":[],"Category":null,"Module":null,"Key":"getCenterPoint_1","X":0,"Y":0,"Width":0,"Height":0,"Code":null,"ModuleGroup":null}}
##{--
def getCenterPoint_1(img, regions):
	import cv2
	import mpp
	import numpy as np
	import pandas as pd
	painted_img = mpp.intel64.copy(img)
	painted_img = mpp.intel64.gray_to_rgb(painted_img)
	data_dict = {"Center_X":[], "Center_Y":[]}
	path = "c:/temp/text.csv"
	region_idx_list = []
	for i in range(len(regions))[:]:
		region = regions[i]
		interior_points = region.interior_points
		center_point = region.center
		
		text_style = 'simple' #simple/plain/duplex/complex/triplex/complex_small
		font_size = 0.3
		font_thickness = 1
		x = center_point[0] 
		y = center_point[1] 
		
		region_number = i+1
		mpp.intel64.paint_text_inplace(painted_img, f"#{region_number}", text_style, False, x, y, 255, 255, 255, font_size, font_thickness)

		region_idx_list.append(f"#{region_number}")
		data_dict["Center_X"] += [center_point[0]]
		data_dict["Center_Y"] += [center_point[1]]

		
	mpp.intel64.paint_regions_boundary_inplace(painted_img, regions,  0, 255, 0)
	df = pd.DataFrame(data_dict, index=region_idx_list)
	df.to_csv(path, sep=",")
	return painted_img

##}--
def RecipeRun(gs_semimage1,gs_semimage2,gs_semimage3,gs_semimage4,gs_semimage5,gs_semimage6,gs_semimage7,gs_semimage8,gs_semimage9,gs_semimage10,gs_layercount,gs_layerimage1,gs_layerindex1,gs_refimage1,gs_refvector1,gs_layerimage2,gs_layerindex2,gs_refimage2,gs_refvector2,gs_layerimage3,gs_layerindex3,gs_refimage3,gs_refvector3,gs_layerimage4,gs_layerindex4,gs_refimage4,gs_refvector4,gs_layerimage5,gs_layerindex5,gs_refimage5,gs_refvector5,gs_layerimage6,gs_layerindex6,gs_refimage6,gs_refvector6,gs_layerimage7,gs_layerindex7,gs_refimage7,gs_refvector7,gs_layerimage8,gs_layerindex8,gs_refimage8,gs_refvector8,gs_layerimage9,gs_layerindex9,gs_refimage9,gs_refvector9,gs_layerimage10,gs_layerindex10,gs_refimage10,gs_refvector10,gs_layerimage11,gs_layerindex11,gs_refimage11,gs_refvector11,gs_layerimage12,gs_layerindex12,gs_refimage12,gs_refvector12,gs_layerimage13,gs_layerindex13,gs_refimage13,gs_refvector13,gs_layerimage14,gs_layerindex14,gs_refimage14,gs_refvector14,gs_layerimage15,gs_layerindex15,gs_refimage15,gs_refvector15,gs_layerimage16,gs_layerindex16,gs_refimage16,gs_refvector16,gs_layerimage17,gs_layerindex17,gs_refimage17,gs_refvector17,gs_layerimage18,gs_layerindex18,gs_refimage18,gs_refvector18,gs_layerimage19,gs_layerindex19,gs_refimage19,gs_refvector19,gs_layerimage20,gs_layerindex20,gs_refimage20,gs_refvector20,gs_resultimageurl,gs_resultdataurl,gs_resultimageextension,gs_waferid,gs_defectid,gs_xreal,gs_yreal,gs_scale,gs_xindex,gs_yindex,gs_particlecode,gs_angle,gs_clipimagewidth,gs_clipimageheight,gs_imagefov):
	resultdata = None
	import Core
##<--{"Name":"Load","Description":null,"Inputs":[{"Name":"path","Alias":"ImagePath","Type":"Global","Value":"gs_semimage1","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"5449187592","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"gray_mode","Alias":"GrayMode","Type":"Bool","Value":"False","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"5449187593","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"output_image","Alias":"LoadImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_image","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"BasicOperation","Key":"Load","X":978,"Y":500,"Width":0,"Height":0,"Code":"def Load(path, gray_mode):\r\n    \"\"\"\r\n    Load(path, gray_mode) -> retval:image(ndarray)\r\n    설명: 입력경로의 이미지를 읽어온다.\\n\r\n    입력: path(string), grayMode(bool){False: original image, True: grayscale image}\\n\r\n    출력: image (ndarray)\r\n    \"\"\"\r\n\r\n    if os.path.exists(path) is False:\r\n        raise NameError('Path Error')\r\n    output_image = mpp.intel64.load(path, gray_mode)\r\n    \r\n    if output_image is None:\r\n        raise NameError('API Execution Failed')\r\n\r\n    return output_image\r\n","ModuleGroup":null}
	output_image = Core.BasicOperation.Load( gs_semimage1, False)
##<--{"Name":"RGBToGray","Description":null,"Inputs":[{"Name":"rgb_image","Alias":"RGBImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5573827134","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"output_image","Alias":"GrayImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_image_1","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"BasicOperation","Key":"RGBToGray","X":883,"Y":629,"Width":0,"Height":0,"Code":"def RGBToGray(rgb_image):\r\n    \"\"\"\r\n    RGBToGray(rgb_image) -> retval: Gray Image(ndarray)\r\n    설명: RGB Image 를 Gray Image 로 변환한다.\\n\r\n    입력: RGB image(ndarray)\\n\r\n    출력: Gray Image(ndarray)\r\n    \"\"\"\r\n    output_image = mpp.intel64.rgb_to_gray(rgb_image)\r\n    return output_image\r\n","ModuleGroup":null}
	output_image_1 = Core.BasicOperation.RGBToGray( output_image)
##<--{"Name":"Clip","Description":null,"Inputs":[{"Name":"input_image","Alias":"TargetImge","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"9272901770","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"clip_point_x","Alias":"LeftTopX","Type":"Int","Value":"2","MinValue":"0","MaxValue":"10000000","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"9272901771","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"clip_point_y","Alias":"LeftTopY","Type":"Int","Value":"0","MinValue":"0","MaxValue":"10000000","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"9272901772","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"clip_width","Alias":"ClipWidth","Type":"Int","Value":"276","MinValue":"0","MaxValue":"10000000","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"9272901773","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"clip_height","Alias":"ClipHeight","Type":"Int","Value":"255","MinValue":"0","MaxValue":"10000000","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"9272901774","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true}],"Outputs":[{"Name":"output_image","Alias":"ClipImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_image_2","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"BasicOperation","Key":"Clip","X":772,"Y":745,"Width":0,"Height":0,"Code":"def Clip(input_image, clip_point_x, clip_point_y, clip_width, clip_height):\r\n    \"\"\"\r\n    Clip(source_image, clip_point_x, clip_point_y, clip_width, clip_height) -> retval:clipped image(ndarray)\r\n    설명: source 이미지에서 입력 영역을 가져온다.\\n\r\n    입력: source image handle(ndarray), clip point x(int){시작점 X좌표, >= 0}, clip point y(int){시작점 y좌표, >= 0}, clip width(int){w>0}, clip height(int){h>0}\\n\r\n    출력: clipped image handle(ndarray)\r\n    \"\"\"\r\n\r\n    if input_image is None:\r\n        raise NameError('Base  Handle is None')\r\n\r\n    output_image =  mpp.intel64.clip(input_image, clip_point_x, clip_point_y, clip_width, clip_height)\r\n    if output_image is None:\r\n        raise NameError('API Execution Failed')\r\n\r\n\r\n    return output_image\r\n","ModuleGroup":null}
	output_image_2 = Core.BasicOperation.Clip( output_image_1, 2, 0, 276, 255)
##<--{"Name":"GaussianFiltering","Description":null,"Inputs":[{"Name":"input","Alias":"InputImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5582910290","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"mask_size","Alias":"MaskSize","Type":"Int","Value":"3","MinValue":"1","MaxValue":"10000","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"5582910291","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"sigma","Alias":"Sigma","Type":"Float","Value":"1","MinValue":"0.1","MaxValue":"100.0","Items":[],"DefaultValue":"","IsUsercontrol":true,"Key":"5582910292","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"rois","Alias":"ROIs","Type":"ROI","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5582910293","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"output","Alias":"GaussianImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"Preprocessing","Key":"GaussianFiltering","X":531,"Y":855,"Width":0,"Height":0,"Code":"def GaussianFiltering(input, mask_size, sigma, rois):\r\n    \"\"\"\r\n    GaussianFiltering(input, mask_size, sigma)-> retval: output(ndarray)\r\n    설명: Gaussian Filter를 이용해서 Image를 Filtering 한다.\\n\r\n    입력: input(ndarray), mask_size(int), sigma(float), rois(rois)\\n\r\n    출력: output(ndarray)\r\n    \"\"\"\r\n    if rois is None:\r\n        output = mpp.intel64.gaussian_filtering(input, mask_size, sigma)\r\n    else:\r\n        output = mpp.intel64.gaussian_filtering_rois(input, mask_size, sigma, rois)\r\n    return output\r\n","ModuleGroup":null}
	output = Core.Preprocessing.GaussianFiltering( output_image_2, 3, 1, None)
##<--{"Name":"OtsuThresholdValue","Description":null,"Inputs":[{"Name":"input_image","Alias":"TargetImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"1231900292","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"threshold","Alias":"OtusThresholdValue","Type":"Int","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"threshold","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"Segmentation","Key":"OtsuThresholdValue","X":781,"Y":991,"Width":0,"Height":0,"Code":"def OtsuThresholdValue(input_image):\r\n    \"\"\"\r\n    AutoThreshold(input_image) -> retval: otsu treshold value (ndarray)\r\n    설명: image를 이진화를 하기 위한 값을 Otsu 알고리즘을 사용하여 얻는다.\\n\r\n    입력: target_image(ndarray)\\n\r\n    출력: threshold(int)\r\n    \"\"\"\r\n    threshold = mpp.intel64.otsu_threshold_value_by_image(input_image)\r\n    return threshold\r\n","ModuleGroup":null}
	threshold = Core.Segmentation.OtsuThresholdValue( output)
##<--{"Name":"IntensityThresholding","Description":null,"Inputs":[{"Name":"input_image","Alias":"TargetImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5767484844","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"threshold","Alias":"ThresholdValue","Type":"Int","Value":"70","MinValue":"0","MaxValue":"255","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5767484845","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"option","Alias":"ScopeOption","Type":"List","Value":"\"less_equal\"","MinValue":"","MaxValue":"","Items":["\"less\"","\"less_equal\"","\"equal\"","\"greater\"","\"greater_equal\""],"DefaultValue":"","IsUsercontrol":true,"Key":"5767484846","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"rois","Alias":"rois","Type":"ROI","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"5767484847","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"binarization_image","Alias":"BinarizationImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"binarization_image","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"Segmentation","Key":"IntensityThresholding","X":532,"Y":1102,"Width":0,"Height":0,"Code":"def IntensityThresholding(input_image, threshold, option, rois):\r\n    \"\"\"\r\n    BinarizationThresholding(input_image) -> retval: binarization_image (image)\r\n    설명: image를 이진화를 하기 위한 값을 Otsu 알고리즘을 사용하여 얻는다.\\n\r\n    입력: target_image(image),threshold(int),option(External Param), rois(rois)\\n\r\n    출력: binarization_image(image)\r\n    \"\"\"\r\n    if rois is None:\r\n        binarization_image = mpp.intel64.intensity_thresholding(input_image, threshold, option)\r\n    else:\r\n        binarization_image = mpp.intel64.intensity_thresholding_rois(input_image, threshold, option, rois)\r\n    return binarization_image\r\n","ModuleGroup":null}
	binarization_image = Core.Segmentation.IntensityThresholding( output, threshold, "less_equal", None)
##<--{"Name":"RegionExtraction","Description":null,"Inputs":[{"Name":"binary_image","Alias":"BinarizationImage","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"2753316755","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"connectivity","Alias":"Connectivity","Type":"List","Value":"4","MinValue":"","MaxValue":"","Items":["4","8"],"DefaultValue":"","IsUsercontrol":true,"Key":"2753316756","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"regions","Alias":"Regions","Type":"Regions","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"regions","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"regions_count","Alias":"RegionsCount","Type":"Int","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"regions_count","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"RegionAnalysis","Key":"RegionExtraction","X":560,"Y":1308,"Width":0,"Height":0,"Code":"def RegionExtraction(binary_image, connectivity):\r\n    \"\"\"\r\n    RegionExtraction(binary_image, connectivity) -> retval: regions(PyRegions)\r\n    설명: binary image 내 object의 Region 정보를 추출한다.\\n\r\n    입력: binary image(ndarray), connectivity(int){\"4\", \"8\"}\\n\r\n    출력: regions(PyRegions)\r\n    \"\"\"\r\n   \r\n    regions = mpp.intel64.region_extraction(binary_image, connectivity)\r\n    regions_count = len(regions) \r\n    return regions , regions_count\r\n","ModuleGroup":null}
	regions, regions_count = Core.RegionAnalysis.RegionExtraction( binarization_image, 4)
##<--{"Name":"RegionSorting","Description":null,"Inputs":[{"Name":"input_regions","Alias":"TargetRegions","Type":"Regions","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"8982012135","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"sort_key","Alias":"SortKey","Type":"List","Value":"\"rect_y\"","MinValue":"","MaxValue":"","Items":["\"area\"","\"rect_x\"","\"rect_y\"","\"center_x\"","\"center_y\""],"DefaultValue":"","IsUsercontrol":true,"Key":"8982012136","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false},{"Name":"sort_order","Alias":"SortOrder","Type":"List","Value":"\"ascending\"","MinValue":"","MaxValue":"","Items":["\"ascending\"","\"descending\""],"DefaultValue":"","IsUsercontrol":true,"Key":"8982012137","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Outputs":[{"Name":"output","Alias":"SortedRegions","Type":"Regions","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"output_1","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":false}],"Category":"Core","Module":"RegionAnalysis","Key":"RegionSorting","X":368,"Y":1454,"Width":0,"Height":0,"Code":"def RegionSorting(input_regions, sort_key, sort_order):\r\n    \"\"\"\r\n    RegionSorting(input_regions, sort_key, sort_order) -> retval: sorted regions(PyRegions)\r\n    설명: 조건(key, order)에 따라 region을 Sorting 한다.\\n\r\n    입력: regions (PyRegions), sort key(string){\"area\", \"rect_x\", \"rect_y\", \"center_x\", \"center_y\"}, sort order(string){\"ascending\"(Default),\"dscending\"}\\n\r\n    출력: sorted regions(PyRegions)\r\n    \"\"\"    \r\n    sort_key = sort_key.lower()        \r\n    sort_order = sort_order.lower()  \r\n    output = mpp.intel64.regions_sorting(input_regions, sort_key, sort_order)\r\n    return output\r\n","ModuleGroup":null}
	output_1 = Core.RegionAnalysis.RegionSorting( regions, "rect_y", "ascending")
##<--{"Name":"getCenterPoint_1","Description":"","Inputs":[{"Name":"img","Alias":"img","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"4318166375","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true},{"Name":"regions","Alias":"regions","Type":"Regions","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"4318166376","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true}],"Outputs":[{"Name":"painted_img","Alias":"painted_img","Type":"NdArray","Value":"","MinValue":"","MaxValue":"","Items":[],"DefaultValue":"","IsUsercontrol":false,"Key":"painted_img_1","DependentPropertyName":"","DependentPropertyValue":"","IsNotUseTrackbar":true}],"Category":"Custom","Module":"Test_UserFunction","Key":"getCenterPoint_1","X":102,"Y":1659,"Width":0,"Height":0,"Code":"def getCenterPoint_1(img, regions):\r\n\timport cv2\r\n\timport mpp\r\n\timport numpy as np\r\n\timport pandas as pd\r\n\t\r\n\tpainted_img = mpp.intel64.copy(img)\r\n\tpainted_img = mpp.intel64.gray_to_rgb(painted_img)\r\n\tdata_dict = {\"Center_X\":[], \"Center_Y\":[]}\r\n\t\r\n\tpath = \"D:\\\\JK\\\\Work\\\\RecipeCreator\\\\RecipeCreator_Job\\\\text.csv\"\r\n\tregion_idx_list = []\r\n\t\r\n\tfor i in range(len(regions))[:]:\r\n\t\tregion = regions[i]\r\n\t\tinterior_points = region.interior_points\r\n\t\tcenter_point = region.center\r\n\t\t\r\n\t\ttext_style = 'simple' #simple/plain/duplex/complex/triplex/complex_small\r\n\t\tfont_size = 0.3\r\n\t\tfont_thickness = 1\r\n\t\tx = center_point[0] \r\n\t\ty = center_point[1] \r\n\t\t\r\n\t\tregion_number = i+1\r\n\t\tmpp.intel64.paint_text_inplace(painted_img, f\"#{region_number}\", text_style, False, x, y, 255, 255, 255, font_size, font_thickness)\r\n\r\n\t\tregion_idx_list.append(f\"#{region_number}\")\r\n\t\tdata_dict[\"Center_X\"] += [center_point[0]]\r\n\t\tdata_dict[\"Center_Y\"] += [center_point[1]]\r\n\r\n\t\t\r\n\tmpp.intel64.paint_regions_boundary_inplace(painted_img, regions,  0, 255, 0)\r\n\tdf = pd.DataFrame(data_dict, index=region_idx_list)\r\n\tdf.to_csv(path, sep=\",\")\r\n\t\r\n\treturn painted_img","ModuleGroup":null}
	painted_img_1 = getCenterPoint_1( output, output_1)
	return resultdata ### _main_return_

if __name__ == "__main__" :
	resultdata = RecipeRun(gs_semimage1,gs_semimage2,gs_semimage3,gs_semimage4,gs_semimage5,gs_semimage6,gs_semimage7,gs_semimage8,gs_semimage9,gs_semimage10,gs_layercount,gs_layerimage1,gs_layerindex1,gs_refimage1,gs_refvector1,gs_layerimage2,gs_layerindex2,gs_refimage2,gs_refvector2,gs_layerimage3,gs_layerindex3,gs_refimage3,gs_refvector3,gs_layerimage4,gs_layerindex4,gs_refimage4,gs_refvector4,gs_layerimage5,gs_layerindex5,gs_refimage5,gs_refvector5,gs_layerimage6,gs_layerindex6,gs_refimage6,gs_refvector6,gs_layerimage7,gs_layerindex7,gs_refimage7,gs_refvector7,gs_layerimage8,gs_layerindex8,gs_refimage8,gs_refvector8,gs_layerimage9,gs_layerindex9,gs_refimage9,gs_refvector9,gs_layerimage10,gs_layerindex10,gs_refimage10,gs_refvector10,gs_layerimage11,gs_layerindex11,gs_refimage11,gs_refvector11,gs_layerimage12,gs_layerindex12,gs_refimage12,gs_refvector12,gs_layerimage13,gs_layerindex13,gs_refimage13,gs_refvector13,gs_layerimage14,gs_layerindex14,gs_refimage14,gs_refvector14,gs_layerimage15,gs_layerindex15,gs_refimage15,gs_refvector15,gs_layerimage16,gs_layerindex16,gs_refimage16,gs_refvector16,gs_layerimage17,gs_layerindex17,gs_refimage17,gs_refvector17,gs_layerimage18,gs_layerindex18,gs_refimage18,gs_refvector18,gs_layerimage19,gs_layerindex19,gs_refimage19,gs_refvector19,gs_layerimage20,gs_layerindex20,gs_refimage20,gs_refvector20,gs_resultimageurl,gs_resultdataurl,gs_resultimageextension,gs_waferid,gs_defectid,gs_xreal,gs_yreal,gs_scale,gs_xindex,gs_yindex,gs_particlecode,gs_angle,gs_clipimagewidth,gs_clipimageheight,gs_imagefov)

